"""Add incremental sync fields to job_target_tables

Revision ID: 4c75d370ae2d
Revises: 
Create Date: 2025-07-06 23:40:23.074272

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c75d370ae2d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_apscheduler_jobs_next_run_time', table_name='apscheduler_jobs')
    op.drop_table('apscheduler_jobs')
    
    # 创建ENUM类型
    conflict_strategy_enum = postgresql.ENUM('SKIP', 'REPLACE', 'IGNORE', 'ERROR', name='conflictstrategy')
    conflict_strategy_enum.create(op.get_bind(), checkfirst=True)
    
    execution_mode_enum = postgresql.ENUM('IMMEDIATE', 'SCHEDULED', name='executionmode')
    execution_mode_enum.create(op.get_bind(), checkfirst=True)
    
    incremental_strategy_enum = postgresql.ENUM('NONE', 'AUTO_ID', 'AUTO_TIMESTAMP', 'CUSTOM_CONDITION', name='incrementalstrategy')
    incremental_strategy_enum.create(op.get_bind(), checkfirst=True)
    
    # 先删除默认值，然后转换类型，最后重新设置默认值
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN conflict_strategy DROP DEFAULT")
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN execution_mode DROP DEFAULT")
    
    # 转换字段类型
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN conflict_strategy TYPE conflictstrategy USING conflict_strategy::conflictstrategy")
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN execution_mode TYPE executionmode USING execution_mode::executionmode")
    
    # 重新设置默认值
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN conflict_strategy SET DEFAULT 'ERROR'")
    op.execute("ALTER TABLE backup_jobs ALTER COLUMN execution_mode SET DEFAULT 'SCHEDULED'")
    
    # 添加新字段到job_target_tables表
    op.add_column('job_target_tables', sa.Column('incremental_strategy', sa.Enum('NONE', 'AUTO_ID', 'AUTO_TIMESTAMP', 'CUSTOM_CONDITION', name='incrementalstrategy'), nullable=True, comment='增量同步策略'))
    op.add_column('job_target_tables', sa.Column('incremental_field', sa.String(length=100), nullable=True, comment='增量字段名（id、created_at等）'))
    op.add_column('job_target_tables', sa.Column('custom_condition', sa.Text(), nullable=True, comment='自定义WHERE条件'))
    op.add_column('job_target_tables', sa.Column('last_sync_value', sa.String(length=255), nullable=True, comment='上次同步的最大值（用于下次增量同步）'))
    
    # 设置默认值
    op.execute("UPDATE job_target_tables SET incremental_strategy = 'NONE' WHERE incremental_strategy IS NULL")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('job_target_tables', 'last_sync_value')
    op.drop_column('job_target_tables', 'custom_condition')
    op.drop_column('job_target_tables', 'incremental_field')
    op.drop_column('job_target_tables', 'incremental_strategy')
    op.alter_column('backup_jobs', 'execution_mode',
               existing_type=sa.Enum('IMMEDIATE', 'SCHEDULED', name='executionmode'),
               type_=sa.VARCHAR(length=20),
               existing_comment='执行模式',
               existing_nullable=True,
               existing_server_default=sa.text("'scheduled'::character varying"))
    op.alter_column('backup_jobs', 'conflict_strategy',
               existing_type=sa.Enum('SKIP', 'REPLACE', 'IGNORE', 'ERROR', name='conflictstrategy'),
               type_=sa.VARCHAR(length=20),
               existing_comment='数据冲突处理策略',
               existing_nullable=True,
               existing_server_default=sa.text("'error'::character varying"))
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    # ### end Alembic commands ###
